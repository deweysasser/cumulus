#!/usr/bin/perl

$accountType = $ARGV[0];
$file = $ARGV[1];
shift @ARGV;
shift @ARGV;

open(FH, '>', $file) or die $!;

select FH;

print <<EOF;
package cumulus
import "context"

// WARNING:  this file is generated. DO NOT EDIT.  Edit the source instead


EOF

while(<>) {
    if (/^type *(\w+)/) {
    $type = $1;
    $ifname = interface_for($1);
    $plural = plural($1);
        print <<EOF;

func (a $accountType) $plural(ctx context.Context) chan $type {
	var providers []Provider[$type]

	for _, acct := range a {

		if v, ok := acct.($ifname); ok {
			providers = append(providers, v.$plural)
		}
	}

	return collect(ctx, providers)
}
EOF
    }
}


sub interface_for {
    $type=$_[0];
    if ($type =~ /e$/) {
        return "${type}r"
    } else {
        return "${type}er"
    }
}

sub plural {
    return "${_[0]}s";
}
